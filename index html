<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Painel BOT_DO_WHATSAPP</title>
  <style>
    /* Reset b√°sico */
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }
    body {
      background-color: #121212;
      color: #e0d7f5;
      min-height: 100vh;
      display: flex;
      flex-direction: column;
    }
    /* Navbar */
    nav {
      height: 60px;
      background: #3a0ca3;
      color: white;
      display: flex;
      align-items: center;
      padding: 0 20px;
      font-weight: 700;
      font-size: 1.3rem;
      letter-spacing: 1px;
      box-shadow: 0 2px 5px rgba(58,12,163,0.6);
      position: sticky;
      top: 0;
      z-index: 100;
    }
    /* Layout geral */
    .container {
      display: flex;
      flex: 1;
      height: calc(100vh - 60px);
      overflow: hidden;
    }
    /* Menu lateral */
    aside {
      width: 250px;
      background: #240046;
      display: flex;
      flex-direction: column;
      padding-top: 20px;
      transition: transform 0.3s ease;
    }
    aside.closed {
      transform: translateX(-100%);
      position: absolute;
      z-index: 200;
    }
    aside nav a {
      color: #e0d7f5;
      padding: 15px 25px;
      text-decoration: none;
      font-weight: 600;
      border-left: 4px solid transparent;
      transition: background 0.3s, border-color 0.3s;
      cursor: pointer;
      display: flex;
      align-items: center;
      gap: 12px;
    }
    aside nav a:hover,
    aside nav a.active {
      background: #5f259f;
      border-left-color: #c77dff;
    }
    /* Conte√∫do principal */
    main {
      flex: 1;
      padding: 25px 30px;
      overflow-y: auto;
    }
    /* Header do main */
    main h1 {
      margin-bottom: 25px;
      color: #c77dff;
      font-weight: 800;
      font-size: 2rem;
      letter-spacing: 1px;
    }
    /* Formul√°rios e cards */
    .card {
      background: #1b0737;
      padding: 25px 30px;
      border-radius: 10px;
      box-shadow: 0 0 15px rgba(199,125,255,0.3);
      margin-bottom: 25px;
      max-width: 600px;
    }
    .card h2 {
      margin-bottom: 15px;
      color: #9f6fff;
      font-weight: 700;
      font-size: 1.3rem;
    }
    label {
      display: block;
      margin-bottom: 8px;
      font-weight: 600;
      font-size: 0.9rem;
      color: #d4c1ff;
    }
    input[type="text"],
    input[type="url"],
    input[type="number"],
    textarea,
    select {
      width: 100%;
      padding: 10px 12px;
      margin-bottom: 15px;
      border-radius: 6px;
      border: none;
      font-size: 1rem;
      background: #3a0ca3;
      color: white;
      transition: background 0.3s;
    }
    input[type="text"]:focus,
    input[type="url"]:focus,
    input[type="number"]:focus,
    textarea:focus,
    select:focus {
      outline: none;
      background: #5f259f;
    }
    textarea {
      resize: vertical;
      min-height: 80px;
    }
    button {
      background: #c77dff;
      color: #240046;
      border: none;
      padding: 12px 22px;
      border-radius: 6px;
      font-weight: 700;
      cursor: pointer;
      font-size: 1.1rem;
      transition: background 0.3s;
    }
    button:hover {
      background: #9f6fff;
      color: white;
    }
    /* Toggle menu bot√£o mobile */
    .toggle-menu {
      display: none;
      position: absolute;
      left: 20px;
      top: 15px;
      cursor: pointer;
      width: 30px;
      height: 30px;
      flex-direction: column;
      justify-content: space-around;
      z-index: 300;
    }
    .toggle-menu div {
      width: 100%;
      height: 4px;
      background: white;
      border-radius: 2px;
    }
    /* Responsividade */
    @media (max-width: 768px) {
      aside {
        position: fixed;
        height: 100vh;
        z-index: 300;
      }
      .toggle-menu {
        display: flex;
      }
      main {
        padding-top: 50px;
        padding-left: 20px;
        padding-right: 20px;
      }
    }
  </style>
</head>
<body>
  <nav>
    <div class="toggle-menu" id="toggleMenu" aria-label="Toggle menu" role="button" tabindex="0">
      <div></div>
      <div></div>
      <div></div>
    </div>
    BOT_DO_WHATSAPP
  </nav>
  <div class="container">
    <aside id="sidebar">
      <nav>
        <a href="#" class="active" data-section="sendVideo">üìπ Enviar V√≠deo</a>
        <a href="#" data-section="sendImage">üñºÔ∏è Enviar Imagem</a>
        <a href="#" data-section="sendProduct">üõí Enviar Produto</a>
        <a href="#" data-section="settings">‚öôÔ∏è Configura√ß√µes</a>
      </nav>
    </aside>
    <main>
      <section id="sendVideo" class="section">
        <h1>Enviar V√≠deo</h1>
        <div class="card">
          <h2>Enviar v√≠deo para grupo ou chat</h2>
          <form id="formSendVideo">
            <label for="groupVideo">ID do grupo ou chat</label>
            <input type="text" id="groupVideo" name="group" placeholder="ex: 12345@g.us ou n√∫mero" required />
            <label for="captionVideo">Legenda</label>
            <textarea id="captionVideo" name="caption" placeholder="Digite a legenda"></textarea>
            <label for="videoFile">Arquivo de v√≠deo (mp4)</label>
            <input type="file" id="videoFile" name="file" accept="video/mp4" required />
            <button type="submit">Enviar V√≠deo</button>
          </form>
          <p id="videoStatus" style="margin-top: 10px;"></p>
        </div>
      </section>

      <section id="sendImage" class="section" style="display:none">
        <h1>Enviar Imagem</h1>
        <div class="card">
          <h2>Enviar imagem via URL</h2>
          <form id="formSendImage">
            <label for="toImage">ID do grupo ou chat</label>
            <input type="text" id="toImage" name="to" placeholder="ex: 12345@g.us ou n√∫mero" required />
            <label for="imageUrl">URL da imagem</label>
            <input type="url" id="imageUrl" name="imageUrl" placeholder="https://exemplo.com/imagem.jpg" required />
            <label for="captionImage">Legenda</label>
            <textarea id="captionImage" name="caption" placeholder="Digite a legenda"></textarea>
            <button type="submit">Enviar Imagem</button>
          </form>
          <p id="imageStatus" style="margin-top: 10px;"></p>
        </div>
      </section>

      <section id="sendProduct" class="section" style="display:none">
        <h1>Enviar Produto da Loja</h1>
        <div class="card">
          <h2>Enviar produtos do cat√°logo com legenda personalizada</h2>
          <form id="formSendProduct">
            <label for="productUrl">URL do produto (ex: https://loja.menu/eurodistribuidora/produto)</label>
            <input type="url" id="productUrl" name="productUrl" placeholder="URL do produto" required />
            <label for="productCaption">Legenda fixa para o produto</label>
            <textarea id="productCaption" name="caption" placeholder="Legenda para o produto" required></textarea>
            <label for="productTarget">ID do grupo ou chat para envio</label>
            <input type="text" id="productTarget" name="target" placeholder="ex: 12345@g.us ou n√∫mero" required />
            <button type="submit">Enviar Produto</button>
          </form>
          <p id="productStatus" style="margin-top: 10px;"></p>
        </div>
      </section>

      <section id="settings" class="section" style="display:none">
        <h1>Configura√ß√µes</h1>
        <div class="card">
          <h2>Defina o intervalo entre envios</h2>
          <form id="formSettings">
            <label for="sendInterval">Intervalo entre posts (minutos)</label>
            <input type="number" id="sendInterval" name="sendInterval" min="1" max="1440" value="5" required />
            <button type="submit">Salvar Configura√ß√µes</button>
          </form>
          <p id="settingsStatus" style="margin-top: 10px;"></p>
        </div>
      </section>
    </main>
  </div>

  <script>
    // Menu toggle mobile
    const toggleMenu = document.getElementById("toggleMenu");
    const sidebar = document.getElementById("sidebar");
    toggleMenu.addEventListener("click", () => {
      sidebar.classList.toggle("closed");
    });

    // Navega√ß√£o entre se√ß√µes
    const links = sidebar.querySelectorAll("nav a");
    const sections = document.querySelectorAll(".section");

    function showSection(id) {
      sections.forEach(sec => {
        sec.style.display = sec.id === id ? "block" : "none";
      });
      links.forEach(link => {
        if(link.getAttribute("data-section") === id) {
          link.classList.add("active");
        } else {
          link.classList.remove("active");
        }
      });
    }

    links.forEach(link => {
      link.addEventListener("click", e => {
        e.preventDefault();
        const target = link.getAttribute("data-section");
        showSection(target);
        sidebar.classList.add("closed"); // Fecha menu no mobile ap√≥s clicar
      });
    });

    // Inicializa mostrando sendVideo
    showSection("sendVideo");

    // Fun√ß√£o auxiliar para enviar FormData via fetch POST
    async function postFormData(url, formData) {
      try {
        const res = await fetch(url, {
          method: "POST",
          body: formData
        });
        return await res.text();
      } catch (e) {
        return "Erro na requisi√ß√£o: " + e.message;
      }
    }
// Formul√°rio Enviar V√≠deo
    document.getElementById("formSendVideo").addEventListener("submit", async e => {
      e.preventDefault();
      const status = document.getElementById("videoStatus");
      status.textContent = "Enviando v√≠deo...";
      const form = e.target;
      const data = new FormData(form);
      const result = await postFormData("/send-video", data);
      status.textContent = result;
    });

    // Formul√°rio Enviar Imagem
    document.getElementById("formSendImage").addEventListener("submit", async e => {
      e.preventDefault();
      const status = document.getElementById("imageStatus");
      status.textContent = "Enviando imagem...";
      const form = e.target;
      const data = new FormData(form);
      const result = await postFormData("/send-image", data);
      status.textContent = result;
    });

    // Formul√°rio Enviar Produto
    document.getElementById("formSendProduct").addEventListener("submit", async e => {
      e.preventDefault();
      const status = document.getElementById("productStatus");
      status.textContent = "Enviando produto...";
      const form = e.target;
      const jsonBody = {
        productUrl: form.productUrl.value,
        caption: form.caption.value,
        target: form.target.value,
      };
      try {
        const res = await fetch("/send-product", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(jsonBody),
        });
        const text = await res.text();
        status.textContent = text;
      } catch (error) {
        status.textContent = "Erro ao enviar produto: " + error.message;
      }
    });

    // Formul√°rio Configura√ß√µes
    document.getElementById("formSettings").addEventListener("submit", e => {
      e.preventDefault();
      const status = document.getElementById("settingsStatus");
      const interval = e.target.sendInterval.value;
      localStorage.setItem("sendInterval", interval);
      status.textContent = "Configura√ß√µes salvas! Intervalo: " + interval + " minutos.";
      setTimeout(() => (status.textContent = ""), 3000);
    });

    // Carregar intervalo salvo no localStorage ao iniciar
    window.addEventListener("load", () => {
      const savedInterval = localStorage.getItem("sendInterval");
      if(savedInterval) {
        document.getElementById("sendInterval").value = savedInterval;
      }
    });
  </script>
</body>
</html>
